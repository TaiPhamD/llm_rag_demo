services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui-RAG
    pull_policy: always
    ports:
      - "8080:8080"
    volumes:
      - "./ollama/ollama-webui:/app/backend/data"
    environment:
      - OPENAI_API_BASE_URL=http://rag-api:8000/v1
    restart: unless-stopped
    depends_on:
      ollama:
        condition: service_healthy
      rag-api:
        condition: service_started
    networks:
      - rag-network

  rag-api:
    build:
      context: .
      dockerfile: Dockerfile.rag_api
    container_name: rag-api
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - rag-network
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434
    volumes:
      - "./chroma_db:/app/chroma_db"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    networks:
      - rag-network
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    volumes:
      - ./ollama/ollama:/root/.ollama
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        echo "Starting Ollama server..."
        ollama serve &  # Start Ollama in the background

        echo "Waiting 10 seconds for Ollama to be ready..."
        sleep 10

        echo "Pulling Llama3.2 model..."
        if ! ollama pull llama3.2; then
          echo "‚ùå ERROR: Failed to pull Llama3 model. Exiting."
          exit 1  # üî• Fail the container if model pull fails
        fi
        echo "Model downloaded. Keeping Ollama running..."
        
        wait  # Keep the foreground process alive
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: [ "CMD", "timeout", "2", "bash", "-c", "</dev/tcp/localhost/11434" ] # üî• Runs only after server starts
      interval: 10s
      retries: 5
      start_period: 60s  # ‚è≥ Gives enough time for the model to pull
      timeout: 120s

networks:
  rag-network:
    driver: bridge
